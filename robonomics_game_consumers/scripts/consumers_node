#!/usr/bin/env python
# -*- coding: utf-8 -*-

import rospy
from robonomics_market import Ask
from robonomics_market.srv import AsksGenerator
from robonomics_game_consumers.srv import Call, CallResponse
from robonomics_game_common.marketdata import download_matched_asks


objectives = {
        'blue'  : 'Qmbdan31EbgETmJU79shwQDHcMgNoRS6RMGDNJZNp8FLCS',
        'green' : 'QmXzmQUnCrBLkbTAuxkuANjqVp527hJQgHxsjyKf7tod3k',
        'purple': 'QmcQkUeaK9BcvnZW9YJFp6Gt44BUeithrgeEMSunUosUE3',
        'yellow': 'QmajTGG9MAXFf97kuMPHhi4nawZCxXKSttejaFQKjdun6z'
        }

markets = {
        'blue'  : 'QmbnPpVAA2c5Fsfuo4D4VhwY5YfNe2o5P6KZnYjw47ebQT', # metallurgy
        'green' : 'QmfCcLKrTCuXsf6bHbVupVv4zsbs6kjqTQ7DRftGqMLjdW', # medicine
        'purple': 'QmfM63vD3hpDHFSikoRFxucyEgKb7FERcXvLDKpGXnWWh8', # electronics
        'yellow': 'QmZky14ya2BbSNmjkrybxGdADTg7w7r4rKrVcotsz16HvP'  # automotive
        }


class DataSpreadsheet:
    uid = ''
    creds = ''


## @class Consumer
## @brief
## It takes asking law parameters from google spreadsheet and pass it to robonomics_market
## to emulate market ask for robononomics_game
class Consumer:
    def __init__(self):
        rospy.init_node('consumer', anonymous=True, log_level=rospy.DEBUG)
        rospy.logdebug('Consumer node starting...')

        self.data_spreadsheet = DataSpreadsheet()
        self.data_spreadsheet.uid = rospy.get_param('~spreadsheet_id',
                        '16OYBRS4Nt1V_Fkte0oy0rm4pfBrEu37_QeOoqjjAFmI')
        self.data_spreadsheet.creds = rospy.get_param('~account_secret', 'owner_secret.json')

        rospy.logdebug('Waiting for Market node service...')
        rospy.wait_for_service( rospy.get_param('~market_node', '/market') + '/gen_asks' )
        self.signing_ask = rospy.Publisher('market/signing/ask', Ask, queue_size=128)

        ## @brief service for web ui
        def call(request):
            rospy.loginfo('Making ask...')
            rangeName = 'Day %s!A1:W500' % request.period
            asks = download_matched_asks(self.data_spreadsheet.creds,
                                         self.data_spreadsheet.uid,
                                         rangeName)
            
            for ask in asks:
                msg = Ask()
                color = ask['Color']
                msg.model = markets[color]
                msg.objective = objectives[color]
                msg.fee = ask['Fee']
                msg.cost = ask['Price']
                msg.count = int(ask['Quantity'])
                for i in range(ask['Matches']):
                    self.signing_ask.publish(msg)
            return CallResponse()
        rospy.Service('call', Call, call)

        rospy.logdebug('Condumer node started.')

    def get_ask(self, period):
        ## @param period specifies a sheet of spreadsheet to get data
        rangeName = 'Day %s!A1:W500' % period
        params = asks_params(self.data_spreadsheet.creds,
                             self.data_spreadsheet.uid, rangeName)
        return params

    def spin(self):
        rospy.spin()


if __name__ == '__main__':
    Consumer().spin()
